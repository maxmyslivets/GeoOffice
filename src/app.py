import traceback

import flet as ft
from pathlib import Path

from src.components.menu import Menu
from src.models.settings_model import Settings
from src.pages.projects_page import ProjectsPage
from src.pages.tools_page import ToolsPage
from src.services.background_service import BackgroundService
from src.services.database_service import DatabaseService

from src.utils.logger_config import setup_logging, get_logger, log_exception
from src.utils.file_utils import FileUtils

from src.pages.dashboard_page import DashboardPage
# from src.pages.projects_page import ProjectsPage
# from src.pages.tools_page import ToolsPage
from src.pages.settings_page import SettingsPage


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = get_logger("main")


class GeoOfficeApp:
    @log_exception
    def __init__(self):
        logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è GeoOffice")
        self.page = None
        # self.current_view = None

        # –ú–µ–Ω—é
        self.menu = None
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        self.content = None

        self.background_service = BackgroundService()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.settings = Settings(data=None)
        self.load_settings()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        self.database_service: DatabaseService | None = None
        self.init_database()

        logger.info("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")

    @log_exception
    def load_settings(self) -> None:
        """–ß—Ç–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        logger.debug("üìÇ –ß—Ç–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        settings_data = FileUtils.load_json(Path("storage") / "data" / "settings.json")
        if settings_data is not None:
            try:
                self.settings = Settings(data=settings_data)
                logger.info("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            except Warning as e:
                logger.warning(e)
        else:
            logger.info("üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            self.save_settings()

    @log_exception
    def save_settings(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        logger.debug("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        if FileUtils.save_json(self.settings.to_dict(), Path("storage") / "data" / "settings.json"):
            logger.info("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
        else:
            logger.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫")

    @log_exception
    def main(self, page: ft.Page):
        logger.info("üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
        self.page = page
        page.title = "GeoOffice"
        page.theme_mode = self.settings.interface.theme
        page.window.width = self.settings.interface.width
        page.window.height = self.settings.interface.height
        page.window.min_width = 800
        page.window.min_height = 600
        page.window.left = self.settings.interface.left
        page.window.top = self.settings.interface.top
        page.padding = 20

        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        self.create_menu()

        # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        self.create_content()

        # –°–æ–∑–¥–∞–µ–º Row —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
        main_layout = ft.Row([
            self.menu,  # –ü–æ–ª–Ω–æ–µ –º–µ–Ω—é
            ft.VerticalDivider(width=1),  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
            self.content,  # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
        ], expand=True)

        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        page.add(main_layout)
        page.update()

        # –ü–æ–∫–∞–∑ –Ω–∞—á–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        self.show_page(DashboardPage)

        page.update()

        logger.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    @log_exception
    def create_menu(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –±–æ–∫–æ–≤–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏"""
        logger.debug("üß≠ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")

        menu_items = [
            ("–î–æ—Å–∫–∞", {"icon": ft.Icons.DASHBOARD, "page": DashboardPage}),
            ("–û–±—ä–µ–∫—Ç—ã", {"icon": ft.Icons.ARTICLE, "page": ProjectsPage}),
            # ("–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", {"icon": ft.Icons.BUILD, "page": ToolsPage}),
            ("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", {"icon": ft.Icons.SETTINGS, "page": SettingsPage}),
        ]

        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        self.menu = Menu(self).create_menu(menu_items)

        logger.debug("‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Å–æ–∑–¥–∞–Ω–∞")

    @log_exception
    def create_content(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        logger.debug("üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")

        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        self.content = ft.Container(
            content=ft.Text("–ó–∞–≥—Ä—É–∑–∫–∞..."),
            padding=20,
            expand=True
        )

        logger.debug("‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")

    @log_exception
    def show_page(self, page):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
        logger.debug(f"üìñ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {page}")
        self.content.content = page(self).get_scrollable_content()
        self.page.update()

    @log_exception
    def show_project_page(self, project_id):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–±—ä–µ–∫—Ç–∞ –ø–æ id"""
        logger.debug(f"üìñ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–±—ä–µ–∫—Ç–∞ id={project_id}")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–µ–∫—Ç–∞
        from src.pages.project_page import ProjectPage
        project_page = ProjectPage(self, project_id)
        project = project_page.project
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–µ–∫—Ç–∞
        self.content.content = project_page.get_scrollable_content()

        self.page.update()
        logger.debug(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±—ä–µ–∫—Ç–∞ id={project.id} –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞")

    @log_exception
    def _show_snack_bar(self, message, level='info'):
        """–ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""
        try:
            logger.debug(f"üí¨ –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {message}")
            self.page.snack_bar = ft.SnackBar(content=ft.Text(message),
                                              behavior=ft.SnackBarBehavior.FLOATING)
            self.page.snack_bar.open = True
            self.page.snack_bar.show_close_icon = True
            match level:
                case 'error':
                    self.page.snack_bar.bgcolor = ft.Colors.RED
                case 'warning':
                    self.page.snack_bar.bgcolor = ft.Colors.ORANGE
                case _:
                    self.page.snack_bar.bgcolor = ft.Colors.LIGHT_BLUE_ACCENT_700
            self.page.overlay.append(self.page.snack_bar)
            self.page.update()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

    @log_exception
    def show_error(self, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É"""
        try:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞: {message}")
            self._show_snack_bar(f"–û—à–∏–±–∫–∞: {message}", 'error')
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–∫–∏: {e}")

    @log_exception
    def show_warning(self, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"""
        try:
            logger.warning(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {message}")
            self._show_snack_bar(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {message}", 'warning')
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {e}")

    @log_exception
    def show_info(self, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"""
        try:
            logger.info(f"‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {message}")
            self._show_snack_bar(f"{message}", 'info')
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")

    @log_exception
    def init_database(self):
        self.database_service = DatabaseService(
            Path(self.settings.paths.file_server) / self.settings.paths.database_path)

    @log_exception
    def __del__(self):
        """–î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        try:
            self.settings.interface.width = int(self.page.window.width)
            self.settings.interface.height = int(self.page.window.height)
            self.settings.interface.left = int(self.page.window.left)
            self.settings.interface.top = int(self.page.window.top)
            # self.settings.interface.last_page = self.page
            self.save_settings()
        except Exception as e:
            traceback.print_exc()


@log_exception
def main(page: ft.Page):
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    app = GeoOfficeApp()
    app.main(page)
    logger.info("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    setup_logging("GeoOffice")
    logger.info("üéØ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è GeoOffice")
    ft.app(target=main)
