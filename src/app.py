import flet as ft
from pathlib import Path

from src.models.settings_model import Settings
from src.services.database_service import DatabaseService

from src.utils.logger_config import setup_logging, get_logger, log_exception
from src.utils.file_utils import FileUtils

from src.components.categorized_menu import CategorizedMenu
from src.components.breadcrumbs import Breadcrumbs
from src.components.menu_search import MenuSearch

from src.pages.home_page import HomePage
from src.pages.documents_page import DocumentsPage
from src.pages.coordinates_page import CoordinatesPage
from src.pages.conversion_page import ConversionPage
from src.pages.autocad_page import AutocadPage
from src.pages.taxation_page import TaxationPage
from src.pages.settings_page import SettingsPage
from src.pages.scale_page import ScalePage
from src.pages.cartogram_page import CartogramPage


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = get_logger("main")


class GeoOfficeApp:
    @log_exception
    def __init__(self):
        logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è GeoOffice")
        self.page = None
        self.current_view = None

        # –ú–µ–Ω—é —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        self.categorized_menu = None
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–µ–Ω—é
        self.navigation = None
        # –°–≤–µ—Ä–Ω—É—Ç–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –≤–≤–µ—Ä—Ö—É
        self.collapsed_navigation = None

        # –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫
        self.breadcrumbs = None
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫
        self.breadcrumbs_container = None
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        self.content_container = None
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ö–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
        self.content_area = None

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.settings = Settings(data=None)
        self.load_settings()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
        self.pages = {}

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ –º–µ–Ω—é
        self.menu_search = MenuSearch(self)

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        self.database_service: DatabaseService | None = None
        self.init_database()

        logger.info("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")

    @log_exception
    def load_settings(self) -> None:
        """–ß—Ç–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        logger.debug("üìÇ –ß—Ç–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        settings_data = FileUtils.load_json(Path("storage") / "data" / "settings.json")
        if settings_data is not None:
            try:
                self.settings = Settings(data=settings_data)
                logger.info("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            except Warning as e:
                logger.warning(e)
        else:
            logger.info("üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            self.save_settings()

    @log_exception
    def save_settings(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        logger.debug("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        if FileUtils.save_json(self.settings.to_dict(), Path("storage") / "data" / "settings.json"):
            logger.info("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
        else:
            logger.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫")

    @log_exception
    def main(self, page: ft.Page):
        logger.info("üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
        self.page = page
        page.title = "GeoOffice"
        page.theme_mode = self.settings.interface.theme
        page.window.width = 1200
        page.window.height = 1200
        page.window.min_width = 800
        page.window.min_height = 600
        page.padding = 20

        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        self.create_navigation()

        # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        self.create_main_content()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
        self.initialize_pages()

        # –°–æ–∑–¥–∞–µ–º Row —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
        main_layout = ft.Row([
            self.navigation,  # –ü–æ–ª–Ω–æ–µ –º–µ–Ω—é
            self.collapsed_navigation,  # –°–≤–µ—Ä–Ω—É—Ç–æ–µ –º–µ–Ω—é
            ft.VerticalDivider(width=1),  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
            self.content_area,  # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
        ], expand=True)

        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        page.add(main_layout)
        page.update()

        # –ü–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if not self.current_view:
            self.show_home_page()

        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–Ω—é –≤ —Å–≤–µ—Ä–Ω—É—Ç—ã–π –≤–∏–¥
        self.toggle_menu_visibility()

        page.update()
        logger.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    @log_exception
    def create_navigation(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –±–æ–∫–æ–≤–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏"""
        logger.debug("üß≠ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")

        # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–Ω—é
        menu_header = ft.Container(
            content=ft.Row([
                ft.Icon(ft.Icons.MENU, color=ft.Colors.BLUE, size=24),
                ft.Text("GeoOffice", size=18, weight=ft.FontWeight.BOLD, color=ft.Colors.BLUE),
            ], spacing=10),
            padding=ft.padding.only(left=15, right=15, top=15, bottom=15),
            on_click=self.toggle_menu_visibility,  # –ö–ª–∏–∫ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É —Å–∫—Ä—ã–≤–∞–µ—Ç/–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é
            ink=True
        )

        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        self.categorized_menu = CategorizedMenu(self)
        menu_content = self.categorized_menu.create_menu()

        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–µ–Ω—é
        self.navigation = ft.Container(
            content=ft.Column([
                menu_header,
                ft.Divider(height=1, color=ft.Colors.GREY_300),
                menu_content
            ]),
            width=280,
            bgcolor=ft.Colors.WHITE,
            border=ft.border.all(1, ft.Colors.GREY_300),
            border_radius=8,
            padding=0
        )

        logger.debug("‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Å–æ–∑–¥–∞–Ω–∞")

    @log_exception
    def create_collapsed_menu(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –º–µ–Ω—é —Å –∏–∫–æ–Ω–∫–∞–º–∏"""
        logger.debug("üì± –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –º–µ–Ω—é")

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –≤–≤–µ—Ä—Ö—É
        expand_button = ft.IconButton(
            icon=ft.Icons.MENU,  # –¢–∞–∫–∞—è –∂–µ –∏–∫–æ–Ω–∫–∞ –∫–∞–∫ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è
            icon_color=ft.Colors.BLUE,
            icon_size=24,
            on_click=self.toggle_menu_visibility,
            tooltip="–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –º–µ–Ω—é"
        )

        # –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
        icon_buttons = [
            ft.IconButton(
                icon=ft.Icons.HOME,
                icon_color=ft.Colors.BLUE,
                icon_size=24,
                on_click=lambda e: self.show_page('home'),
                tooltip="–ì–ª–∞–≤–Ω–∞—è"
            ),
            ft.IconButton(
                icon=ft.Icons.DESCRIPTION,
                icon_color=ft.Colors.BLUE,
                icon_size=24,
                on_click=lambda e: self.show_page('documents'),
                tooltip="–î–æ–∫—É–º–µ–Ω—Ç—ã"
            ),
            ft.IconButton(
                icon=ft.Icons.EXPLORE,
                icon_color=ft.Colors.GREEN,
                icon_size=24,
                on_click=lambda e: self.show_page('coordinates'),
                tooltip="–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã"
            ),
            ft.IconButton(
                icon=ft.Icons.TRANSFORM,
                icon_color=ft.Colors.GREEN,
                icon_size=24,
                on_click=lambda e: self.show_page('conversion'),
                tooltip="–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è"
            ),
            ft.IconButton(
                icon=ft.Icons.STRAIGHTEN,
                icon_color=ft.Colors.GREEN,
                icon_size=24,
                on_click=lambda e: self.show_page('scale'),
                tooltip="–ú–∞—Å—à—Ç–∞–±—ã"
            ),
            ft.IconButton(
                icon=ft.Icons.BUILD,
                icon_color=ft.Colors.ORANGE,
                icon_size=24,
                on_click=lambda e: self.show_page('autocad'),
                tooltip="AutoCAD"
            ),
            ft.IconButton(
                icon=ft.Icons.FOREST,
                icon_color=ft.Colors.ORANGE,
                icon_size=24,
                on_click=lambda e: self.show_page('taxation'),
                tooltip="–¢–∞–∫—Å–∞—Ü–∏—è"
            ),
            ft.IconButton(
                icon=ft.Icons.SETTINGS,
                icon_color=ft.Colors.GREY,
                icon_size=24,
                on_click=lambda e: self.show_page('settings'),
                tooltip="–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
            ),
        ]

        # –°–æ–∑–¥–∞–µ–º —Å–≤–µ—Ä–Ω—É—Ç–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –≤–≤–µ—Ä—Ö—É
        self.collapsed_navigation = ft.Container(
            content=ft.Column([
                expand_button,  # –ö–Ω–æ–ø–∫–∞ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –≤–≤–µ—Ä—Ö—É
                ft.Divider(height=1, color=ft.Colors.GREY_300),  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
                *icon_buttons  # –í—Å–µ –∏–∫–æ–Ω–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π
            ], spacing=5, horizontal_alignment=ft.CrossAxisAlignment.CENTER),
            width=60,
            bgcolor=ft.Colors.WHITE,
            border=ft.border.all(1, ft.Colors.GREY_300),
            border_radius=8,
            padding=ft.padding.only(top=10, bottom=10),
            visible=False
        )

        logger.debug("‚úÖ –°–≤–µ—Ä–Ω—É—Ç–æ–µ –º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–æ")

    @log_exception
    def toggle_menu_visibility(self, e=None):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –º–µ–Ω—é"""
        logger.debug("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –º–µ–Ω—é")

        if hasattr(self, 'navigation') and hasattr(self, 'collapsed_navigation'):
            if self.navigation.visible:
                # –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ–µ –º–µ–Ω—é, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–µ—Ä–Ω—É—Ç–æ–µ
                self.navigation.visible = False
                self.navigation.width = 0
                self.collapsed_navigation.visible = True
                self.collapsed_navigation.width = 60
            else:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ–µ –º–µ–Ω—é, —Å–∫—Ä—ã–≤–∞–µ–º —Å–≤–µ—Ä–Ω—É—Ç–æ–µ
                self.navigation.visible = True
                self.navigation.width = 280
                self.collapsed_navigation.visible = False
                self.collapsed_navigation.width = 0

            self.page.update()
            logger.debug("‚úÖ –í–∏–¥–∏–º–æ—Å—Ç—å –º–µ–Ω—é –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞")

    @log_exception
    def create_main_content(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        logger.debug("üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")

        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫
        self.breadcrumbs = Breadcrumbs(self)

        # –°–æ–∑–¥–∞–µ–º —Å–≤–µ—Ä–Ω—É—Ç–æ–µ –º–µ–Ω—é
        self.create_collapsed_menu()

        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫
        self.breadcrumbs_container = ft.Container(
            content=self.breadcrumbs.create_breadcrumbs("home"),
            padding=0
        )

        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        self.content_container = ft.Container(
            content=ft.Text("–ó–∞–≥—Ä—É–∑–∫–∞..."),
            padding=20,
            expand=True
        )

        # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ö–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
        self.content_area = ft.Column([
            self.breadcrumbs_container,
            self.content_container
        ], expand=True)

        logger.debug("‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")

    @log_exception
    def initialize_pages(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü"""
        logger.debug("üìö –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        self.pages = {
            'home': HomePage(self),
            'documents': DocumentsPage(self),
            'documents_import': DocumentsPage(self),  # –ó–∞–≥–ª—É—à–∫–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É
            'documents_export': DocumentsPage(self),  # –ó–∞–≥–ª—É—à–∫–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É
            'documents_archive': DocumentsPage(self),  # –ó–∞–≥–ª—É—à–∫–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É
            'coordinates': CoordinatesPage(self),
            'conversion': ConversionPage(self),
            'scale': ScalePage(self),
            'autocad': AutocadPage(self),
            'taxation': TaxationPage(self),
            'settings': SettingsPage(self),
            'cartogram': CartogramPage(self),
        }
        logger.info(f"‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(self.pages)} —Å—Ç—Ä–∞–Ω–∏—Ü")

    @log_exception
    def show_page(self, page_name):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ –∏–º–µ–Ω–∏"""
        if page_name in self.pages:
            logger.debug(f"üìñ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {page_name}")
            page_instance = self.pages[page_name]
            self.content_container.content = page_instance.get_scrollable_content()
            self.current_view = page_name

            # –û–±–Ω–æ–≤–ª—è–µ–º —Ö–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏
            self.breadcrumbs_container.content = self.breadcrumbs.create_breadcrumbs(page_name)

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—é
            if hasattr(self, 'categorized_menu'):
                self.categorized_menu.set_current_page(page_name)

            # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ —Å–≤–µ—Ä–Ω—É—Ç–æ–º –º–µ–Ω—é
            self.update_collapsed_menu_active(page_name)

            self.page.update()
            logger.debug(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page_name} –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞")
        else:
            logger.warning(f"‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

    @log_exception
    def show_project_page(self, project_id):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–±—ä–µ–∫—Ç–∞ –ø–æ id"""
        logger.debug(f"üìñ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–±—ä–µ–∫—Ç–∞ id={project_id}")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–µ–∫—Ç–∞
        from src.pages.project_page import ProjectPage
        project_page = ProjectPage(self, project_id)
        project = project_page.project
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–µ–∫—Ç–∞
        self.content_container.content = project_page.get_scrollable_content()
        self.current_view = f"project_id{project.id}"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ö–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏
        self.breadcrumbs_container.content = self.breadcrumbs.create_breadcrumbs(f"{project.number} {project.name}")

        self.page.update()
        logger.debug(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±—ä–µ–∫—Ç–∞ id={project.id} –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞")

    @log_exception
    def update_collapsed_menu_active(self, page_name):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Å–≤–µ—Ä–Ω—É—Ç–æ–º –º–µ–Ω—é"""
        if hasattr(self, 'collapsed_navigation'):
            # –ú–∞–ø–ø–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü –Ω–∞ –∏–Ω–¥–µ–∫—Å—ã –∫–Ω–æ–ø–æ–∫ –≤ —Å–≤–µ—Ä–Ω—É—Ç–æ–º –º–µ–Ω—é
            # –ò–Ω–¥–µ–∫—Å—ã —Å–¥–≤–∏–Ω—É—Ç—ã –Ω–∞ 2 –∏–∑-–∑–∞ –∫–Ω–æ–ø–∫–∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –≤–≤–µ—Ä—Ö—É
            page_to_index = {
                'home': 2,
                'documents': 3,
                'documents_import': 3,
                'documents_export': 3,
                'documents_archive': 3,
                'cartogram': 3,
                'coordinates': 4,
                'conversion': 5,
                'scale': 6,
                'autocad': 7,
                'taxation': 8,
                'settings': 9
            }

            # –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç–∞ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ (–Ω–∞—á–∏–Ω–∞—è —Å –∏–Ω–¥–µ–∫—Å–∞ 2, –ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è)
            for i, button in enumerate(self.collapsed_navigation.content.controls[2:], start=2):
                if i == page_to_index.get(page_name, -1):
                    # –ê–∫—Ç–∏–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - —Å–∏–Ω–∏–π —Ü–≤–µ—Ç
                    button.icon_color = ft.Colors.BLUE
                else:
                    # –ù–µ–∞–∫—Ç–∏–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ü–≤–µ—Ç
                    if i < 4:  # –ì–ª–∞–≤–Ω–∞—è –∏ –î–æ–∫—É–º–µ–Ω—Ç—ã (–∏–Ω–¥–µ–∫—Å—ã 2-3)
                        button.icon_color = ft.Colors.BLUE
                    elif i < 7:  # –ì–µ–æ–¥–µ–∑–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã (–∏–Ω–¥–µ–∫—Å—ã 4-6)
                        button.icon_color = ft.Colors.GREEN
                    elif i < 9:  # –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (–∏–Ω–¥–µ–∫—Å—ã 7-8)
                        button.icon_color = ft.Colors.ORANGE
                    else:  # –°–∏—Å—Ç–µ–º–∞ (–∏–Ω–¥–µ–∫—Å 9)
                        button.icon_color = ft.Colors.GREY

    @log_exception
    def show_home_page(self, e=None):
        """–ü–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        logger.debug("üè† –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
        self.show_page('home')

    @log_exception
    def _show_snack_bar(self, message, level='info'):
        """–ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""
        try:
            logger.debug(f"üí¨ –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {message}")
            self.page.snack_bar = ft.SnackBar(content=ft.Text(message),
                                              behavior=ft.SnackBarBehavior.FLOATING)
            self.page.snack_bar.open = True
            self.page.snack_bar.show_close_icon = True
            match level:
                case 'error':
                    self.page.snack_bar.bgcolor = ft.Colors.RED
                case 'warning':
                    self.page.snack_bar.bgcolor = ft.Colors.ORANGE
                case _:
                    self.page.snack_bar.bgcolor = ft.Colors.LIGHT_BLUE_ACCENT_700
            self.page.overlay.append(self.page.snack_bar)
            self.page.update()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

    @log_exception
    def show_error(self, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É"""
        try:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞: {message}")
            self._show_snack_bar(f"–û—à–∏–±–∫–∞: {message}", 'error')
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–∫–∏: {e}")

    @log_exception
    def show_warning(self, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"""
        try:
            logger.warning(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {message}")
            self._show_snack_bar(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {message}", 'warning')
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {e}")

    @log_exception
    def show_info(self, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"""
        try:
            logger.info(f"‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {message}")
            self._show_snack_bar(f"{message}", 'info')
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")

    @log_exception
    def init_database(self):
        self.database_service = DatabaseService(
            Path(self.settings.paths.file_server) / self.settings.paths.database_path)


@log_exception
def main(page: ft.Page):
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    app = GeoOfficeApp()
    app.main(page)
    logger.info("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    setup_logging("GeoOffice")
    logger.info("üéØ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è GeoOffice")
    ft.app(target=main)
