import flet as ft
from abc import ABC, abstractmethod
from src.utils.logger_config import get_logger, log_exception


class BasePage(ABC):
    """
    –ë–∞–∑–æ–≤—ã–π –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è GeoOffice.
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –±–∞–∑–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å UI –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏.
    """
    
    def __init__(self, app):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
        :param app: –≠–∫–∑–µ–º–ø–ª—è—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        """
        self.app = app
        self.page = app.page
        self.data = app.data
        self._content = None
        
        # –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        self.logger = get_logger(f"pages.{self.__class__.__name__.lower()}")
        self.logger.debug(f"üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã {self.__class__.__name__}")
    
    @abstractmethod
    def get_content(self):
        """
        –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã).
        :return: Flet UI-—ç–ª–µ–º–µ–Ω—Ç
        """
        pass
    
    @log_exception
    def get_scrollable_content(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π.
        :return: Flet Container —Å –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
        """
        self.logger.debug("üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
        content = ft.Container(
            content=ft.Column([
                self.get_content()
            ], scroll=ft.ScrollMode.AUTO, expand=True),
            alignment=ft.alignment.top_left,
            expand=True
        )
        self.logger.debug("‚úÖ –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")
        return content
    
    @log_exception
    def show_snack_bar(self, message):
        """
        –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        :param message: –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        """
        self.logger.debug(f"üí¨ –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {message}")
        self.app.show_snack_bar(message)
    
    @log_exception
    def show_error(self, error_message):
        """
        –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        :param error_message: –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
        """
        self.logger.error(f"‚ùå –û—à–∏–±–∫–∞: {error_message}")
        self.app.show_error(error_message)
    
    @log_exception
    def show_warning(self, warning_message):
        """
        –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        :param warning_message: –¢–µ–∫—Å—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        """
        self.logger.warning(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {warning_message}")
        self.app.show_warning(warning_message)
    
    @log_exception
    def show_info(self, info_message):
        """
        –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        :param info_message: –¢–µ–∫—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        """
        self.logger.info(f"‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {info_message}")
        self.app.show_snack_bar(info_message)
    
    @log_exception
    def save_data(self):
        """
        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
        """
        self.logger.debug("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        self.app.save_data()
    
    @log_exception
    def update_page(self):
        """
        –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É (UI).
        """
        if self.page:
            self.logger.debug("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
            self.page.update()
            self.logger.debug("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
        else:
            self.logger.warning("‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞") 